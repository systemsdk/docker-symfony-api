# In all environments, the following files are loaded if they exist,
# the latter taking precedence over the former:
#
#  * .env                contains default values for the environment variables needed by the app
#  * .env.local          uncommitted file with local overrides
#  * .env.$APP_ENV       committed environment-specific defaults
#  * .env.$APP_ENV.local uncommitted environment-specific overrides
#
# Real environment variables win over .env files.
#
# DO NOT DEFINE PRODUCTION SECRETS IN THIS FILE NOR IN ANY OTHER COMMITTED FILES.
# https://symfony.com/doc/current/configuration/secrets.html
#
# Run "composer dump-env prod" to compile .env files for production use (requires symfony/flex >=1.2).
# https://symfony.com/doc/current/best_practices.html#use-environment-variables-for-infrastructure-configuration

###> docker compose configuration ###
COMPOSE_PROJECT_NAME=backend
###< docker compose configuration ###

###> NGinx docker configuration. Can be overridden in: .env.local, .env.staging, .env.prod. ###
WEB_PORT_HTTP=80
WEB_PORT_SSL=443
###< Nginx docker configuration ###

###> XDebug docker configuration. Can be overridden in: .env.local. ###
# XDEBUG_CONFIG possible values: main|osx. Use main value for Linux and Windows, osx value for MacOS.
XDEBUG_CONFIG=main
# Sometimes we need to use different xdebug versions, list of versions can be found here - https://pecl.php.net/package/xdebug
XDEBUG_VERSION=3.4.4
###< XDebug docker configuration ###

###> MySQL docker configuration. Can be overridden in: .env.local, .env.staging, .env.prod. ###
# MySQL version, recommend values: 9.3.0|8.4.5|8.3.0|8.2.0|8.1.0|8.0.39
MYSQL_VERSION=8.4.5
# MySQL INNODB_USE_NATIVE_AIO possible values: 1|0. Set to 0 when AIO interface is not supported on OSX. https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_use_native_aio
INNODB_USE_NATIVE_AIO=1
# Sometimes AWS MySQL RDS has SQL_MODE="NO_ENGINE_SUBSTITUTION" (https://github.com/awsdocs/amazon-rds-user-guide/issues/160) but MySQL default described here - https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_sql_mode
SQL_MODE="ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
MYSQL_ROOT_PASSWORD=secret
MYSQL_PORT=33061
###< MySQL docker configuration ###

###> RabbitMQ docker configuration. Can be overridden in: .env.local, .env.staging, .env.prod. ###
RABBITMQ_ERLANG_COOKIE=7ead507151fc4461b9f45c1161384a04
RABBITMQ_USER=guest
RABBITMQ_PASS=guest
RABBITMQ_MANAGEMENT_PORT=15672
###< RabbitMQ docker configuration ###

###> Elasticsearch docker configuration. Can be overridden in: .env.local, .env.staging, .env.prod. ###
ELK_VERSION=7.10.1
ELASTICSEARCH_USERNAME=elastic
ELASTICSEARCH_PASSWORD=changeme
ELASTIC_HTTP_PORT=9200
ELASTIC_TRANSPORT_PORT=9300
KIBANA_PORT=5601
###< Elasticsearch docker configuration ###

###> Redis docker configuration. Can be overridden in: .env.local. ###
REDIS_PORT=6379
###< Redis docker configuration ###

###> symfony/framework-bundle ###
APP_ENV=dev
APP_DEBUG=1
APP_SECRET=42f011ec3a7bde0bec87364b1d967193
TRUSTED_PROXIES=127.0.0.1,REMOTE_ADDR
#TRUSTED_HOSTS='^localhost|example\.com$'
###< symfony/framework-bundle ###

###> doctrine/doctrine-bundle ###
# Format described at https://www.doctrine-project.org/projects/doctrine-dbal/en/latest/reference/configuration.html#connecting-using-a-url
# IMPORTANT: You MUST configure your server version, either here or in config/packages/doctrine.yaml
#
# DATABASE_URL="sqlite:///%kernel.project_dir%/var/data.db"
# DATABASE_URL="postgresql://app:!ChangeMe!@127.0.0.1:5432/app?serverVersion=15&charset=utf8"
DATABASE_URL=mysql://root:${MYSQL_ROOT_PASSWORD}@mysql:3306/symfony
###< doctrine/doctrine-bundle ###

###> redis ###
REDIS_URL=redis://redis
###< redis ###

###> symfony/mailer ###
MAILER_DSN=smtp://user:pass@mail:1025
APP_SENDER_EMAIL=admin@localhost
APP_EMAIL_NOTIFICATION_ABOUT_ERROR=1
APP_ERROR_RECEIVER_EMAIL=admin@localhost
###< symfony/mailer ###

###> symfony/messenger ###
MESSENGER_TRANSPORT_DSN=amqp://${RABBITMQ_USER}:${RABBITMQ_PASS}@rabbitmq:5672/%2f/messages
# Send "failed" messages for unlimited retry (messenger:failed:retry). Possible values: 0|1. In case 1 - failed messages will be sent for unlimited retry. In case 0 - only 1 retry is possible.
MESSENGER_FAILED_IS_RETRYABLE=1
# Time in miliseconds before retry for "failed" messages (messenger:failed:retry). Available in case MESSENGER_FAILED_IS_RETRYABLE=1.
MESSENGER_FAILED_RETRY_WAITING_TIME=10000
# How many days we should have failed messages inside messenger_messages table
MESSENGER_MESSAGES_HISTORY_DAYS=7
###< symfony/messenger ###

###> Elasticsearch app configuration ###
ELASTICSEARCH_HOST=http://elasticsearch:9200
ELASTICSEARCH_NUMBER_OF_SHARDS=1
ELASTICSEARCH_NUMBER_OF_REPLICAS=0
###< Elasticsearch app configuration ###

###> lexik/jwt-authentication-bundle ###
JWT_SECRET_KEY=config/jwt/private.pem
JWT_PUBLIC_KEY=config/jwt/public.pem
JWT_PASSPHRASE=3a37d3afd9accc7959f952b2ae555d21
JWT_TOKEN_TTL=3600
###< lexik/jwt-authentication-bundle ###

###> nelmio/cors-bundle ###
CORS_ALLOW_ORIGIN='^https?://localhost(:[0-9]+)?$'
###< nelmio/cors-bundle ###

###> Api-key options ###
# Attention: Changing values will lead that existing api key tokens will not work. You'll need to create new tokens.
# Possible values: 1|0. Use value 1 when you want to have encrypted api-key tokens using open ssl inside db.
API_KEY_TOKEN_OPEN_SSL_ENCRYPT=1
# Possible values: md5|sha1|sha256|sha512 (https://www.php.net/manual/en/function.hash-algos.php). Used when API_KEY_TOKEN_OPEN_SSL_ENCRYPT set to 1.
API_KEY_TOKEN_HASH_ALGO=sha256
###< Api-key options ###

###> Open ssl options ###
# Attention: Changing values will lead that existing encrypted api key tokens will not work. You'll need to create new tokens.
OPEN_SSL_ALGORITHM=aes-128-gcm
# Set proper ssl key value for your project. It is recommended to have another value for your prod environment and save the value in the secret place.
OPEN_SSL_KEY=systemsdk
###< Open ssl options ###

# how many failure attempts for lock account, 0 - off
LOCK_USER_ON_LOGIN_FAILURE_ATTEMPTS=0

# how many days health history will be stored in the db
DATABASE_HEALTH_HISTORY_DAYS=7

# how many days log login history will be stored in the db
DATABASE_LOG_LOGIN_HISTORY_DAYS=90

# how many days log request history will be stored in the db
DATABASE_LOG_REQUEST_HISTORY_DAYS=15

REQUEST_LOG_SENSITIVE_PROPERTIES='["password", "token", "authorization", "cookie"]'

REQUEST_LOG_IGNORED_ROUTES='["", "/", "/api", "/api/", "/api/health", "/api/version", "/api/secret/*"]'

###> symfony/lock ###
# Choose one of the stores below
# postgresql+advisory://db_user:db_password@localhost/db_name
LOCK_DSN=redis://redis:6379
###< symfony/lock ###
